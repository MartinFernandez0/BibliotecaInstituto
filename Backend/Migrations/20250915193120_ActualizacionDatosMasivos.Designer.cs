// <auto-generated />
using System;
using Backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(BiblioContext))]
    [Migration("20250915193120_ActualizacionDatosMasivos")]
    partial class ActualizacionDatosMasivos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Service.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Gabriel García Márquez"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Jorge Luis Borges"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Julio Cortázar"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Miguel de Cervantes"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Mario Vargas Llosa"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Juan Rulfo"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Adolfo Bioy Casares"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Antoine de Saint-Exupéry"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Roberto Bolaño"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Pablo Neruda"
                        });
                });

            modelBuilder.Entity("Service.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Carreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Ingeniería"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Literatura"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Matemática"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Historia"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Filosofía"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Informática"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Derecho"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Medicina"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Arquitectura"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Arte"
                        });
                });

            modelBuilder.Entity("Service.Models.Editorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Editoriales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Sudamericana"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Emecé"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Alfaguara"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Espasa"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Planeta"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Debolsillo"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Seix Barral"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Penguin"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Siglo XXI"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Anagrama"
                        });
                });

            modelBuilder.Entity("Service.Models.Ejemplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibroId");

                    b.ToTable("Ejemplares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            Disponible = false,
                            Estado = 1,
                            IsDeleted = false,
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            Disponible = true,
                            Estado = 1,
                            IsDeleted = false,
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            Disponible = false,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            Disponible = true,
                            Estado = 1,
                            IsDeleted = false,
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            Disponible = false,
                            Estado = 4,
                            IsDeleted = false,
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            Disponible = true,
                            Estado = 2,
                            IsDeleted = false,
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Novela"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Cuento"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Poesía"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Ensayo"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Clásico"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Infantil"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Drama"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Filosofía"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Ficción"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Histórico"
                        });
                });

            modelBuilder.Entity("Service.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnioPublicacion")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EditorialId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Paginas")
                        .HasColumnType("int");

                    b.Property<string>("Portada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EditorialId");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnioPublicacion = 1967,
                            Descripcion = "Novela de realismo mágico",
                            EditorialId = 1,
                            IsDeleted = false,
                            Paginas = 471,
                            Portada = "",
                            Sinopsis = "Historia de la familia Buendía.",
                            Titulo = "Cien Años de Soledad"
                        },
                        new
                        {
                            Id = 2,
                            AnioPublicacion = 1949,
                            Descripcion = "Cuentos fantásticos",
                            EditorialId = 2,
                            IsDeleted = false,
                            Paginas = 157,
                            Portada = "",
                            Sinopsis = "Colección de cuentos de Borges.",
                            Titulo = "El Aleph"
                        },
                        new
                        {
                            Id = 3,
                            AnioPublicacion = 1963,
                            Descripcion = "Novela experimental",
                            EditorialId = 3,
                            IsDeleted = false,
                            Paginas = 600,
                            Portada = "",
                            Sinopsis = "Historia de Horacio Oliveira.",
                            Titulo = "Rayuela"
                        },
                        new
                        {
                            Id = 4,
                            AnioPublicacion = 1605,
                            Descripcion = "Clásico de la literatura",
                            EditorialId = 4,
                            IsDeleted = false,
                            Paginas = 863,
                            Portada = "",
                            Sinopsis = "Aventuras de Don Quijote y Sancho.",
                            Titulo = "Don Quijote"
                        },
                        new
                        {
                            Id = 5,
                            AnioPublicacion = 1923,
                            Descripcion = "Poesía",
                            EditorialId = 2,
                            IsDeleted = false,
                            Paginas = 80,
                            Portada = "",
                            Sinopsis = "Poemas de Borges.",
                            Titulo = "Fervor de Buenos Aires"
                        },
                        new
                        {
                            Id = 6,
                            AnioPublicacion = 1963,
                            Descripcion = "Novela",
                            EditorialId = 3,
                            IsDeleted = false,
                            Paginas = 400,
                            Portada = "",
                            Sinopsis = "Historia de cadetes en Lima.",
                            Titulo = "La Ciudad y los Perros"
                        },
                        new
                        {
                            Id = 7,
                            AnioPublicacion = 1955,
                            Descripcion = "Novela corta",
                            EditorialId = 1,
                            IsDeleted = false,
                            Paginas = 200,
                            Portada = "",
                            Sinopsis = "Historia en Comala.",
                            Titulo = "Pedro Páramo"
                        },
                        new
                        {
                            Id = 8,
                            AnioPublicacion = 1940,
                            Descripcion = "Ficción",
                            EditorialId = 2,
                            IsDeleted = false,
                            Paginas = 150,
                            Portada = "",
                            Sinopsis = "Novela de Bioy Casares.",
                            Titulo = "La Invención de Morel"
                        },
                        new
                        {
                            Id = 9,
                            AnioPublicacion = 1943,
                            Descripcion = "Clásico infantil",
                            EditorialId = 5,
                            IsDeleted = false,
                            Paginas = 96,
                            Portada = "",
                            Sinopsis = "Historia del principito.",
                            Titulo = "El Principito"
                        },
                        new
                        {
                            Id = 10,
                            AnioPublicacion = 1998,
                            Descripcion = "Novela",
                            EditorialId = 4,
                            IsDeleted = false,
                            Paginas = 609,
                            Portada = "",
                            Sinopsis = "Novela de Roberto Bolaño.",
                            Titulo = "Los Detectives Salvajes"
                        });
                });

            modelBuilder.Entity("Service.Models.LibroAutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("LibroId");

                    b.ToTable("LibroAutores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            IsDeleted = false,
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 2,
                            IsDeleted = false,
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            AutorId = 3,
                            IsDeleted = false,
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            AutorId = 4,
                            IsDeleted = false,
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            AutorId = 2,
                            IsDeleted = false,
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            AutorId = 5,
                            IsDeleted = false,
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            AutorId = 6,
                            IsDeleted = false,
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            AutorId = 7,
                            IsDeleted = false,
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            AutorId = 8,
                            IsDeleted = false,
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            AutorId = 9,
                            IsDeleted = false,
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.LibroGenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("LibroId");

                    b.ToTable("LibroGeneros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GeneroId = 1,
                            IsDeleted = false,
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            GeneroId = 2,
                            IsDeleted = false,
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            GeneroId = 1,
                            IsDeleted = false,
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            GeneroId = 5,
                            IsDeleted = false,
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            GeneroId = 3,
                            IsDeleted = false,
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            GeneroId = 1,
                            IsDeleted = false,
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            GeneroId = 1,
                            IsDeleted = false,
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            GeneroId = 9,
                            IsDeleted = false,
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            GeneroId = 6,
                            IsDeleted = false,
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            GeneroId = 7,
                            IsDeleted = false,
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EjemplarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EjemplarId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Prestamos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EjemplarId = 1,
                            FechaPrestamo = new DateTime(2025, 9, 5, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7972),
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            EjemplarId = 2,
                            FechaPrestamo = new DateTime(2025, 9, 7, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7979),
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            EjemplarId = 3,
                            FechaPrestamo = new DateTime(2025, 9, 9, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7982),
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            EjemplarId = 4,
                            FechaPrestamo = new DateTime(2025, 9, 11, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7984),
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            EjemplarId = 5,
                            FechaPrestamo = new DateTime(2025, 9, 13, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7986),
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            EjemplarId = 6,
                            FechaDevolucion = new DateTime(2025, 9, 10, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7989),
                            FechaPrestamo = new DateTime(2025, 8, 31, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7988),
                            IsDeleted = false,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 7,
                            EjemplarId = 7,
                            FechaDevolucion = new DateTime(2025, 9, 5, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7992),
                            FechaPrestamo = new DateTime(2025, 8, 26, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7991),
                            IsDeleted = false,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 8,
                            EjemplarId = 8,
                            FechaDevolucion = new DateTime(2025, 9, 13, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7995),
                            FechaPrestamo = new DateTime(2025, 9, 3, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7994),
                            IsDeleted = false,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 9,
                            EjemplarId = 9,
                            FechaDevolucion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7998),
                            FechaPrestamo = new DateTime(2025, 9, 8, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7997),
                            IsDeleted = false,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 10,
                            EjemplarId = 10,
                            FechaDevolucion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(8001),
                            FechaPrestamo = new DateTime(2025, 9, 10, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(8000),
                            IsDeleted = false,
                            UsuarioId = 6
                        });
                });

            modelBuilder.Entity("Service.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistracion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dni = "22000111",
                            Domicilio = "Av. Libertad 1000",
                            Email = "martin@fernandez.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7773),
                            IsDeleted = false,
                            Nombre = "Martín Fernández",
                            Observacion = "Usuario principal de prueba",
                            Password = "martin",
                            Telefono = "111111111",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 2,
                            Dni = "87654321",
                            Domicilio = "Calle Verdadera 456",
                            Email = "ana@prueba.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7777),
                            IsDeleted = false,
                            Nombre = "Ana Prueba",
                            Observacion = "",
                            Password = "abcd",
                            Telefono = "987654321",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 3,
                            Dni = "11223344",
                            Domicilio = "Av. Siempre Viva 742",
                            Email = "carlos@test.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7780),
                            IsDeleted = false,
                            Nombre = "Carlos Test",
                            Observacion = "",
                            Password = "pass",
                            Telefono = "111222333",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 4,
                            Dni = "55667788",
                            Domicilio = "Calle Real 100",
                            Email = "lucia@ejemplo.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7782),
                            IsDeleted = false,
                            Nombre = "Lucía Ejemplo",
                            Observacion = "",
                            Password = "lucia",
                            Telefono = "444555666",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 5,
                            Dni = "99887766",
                            Domicilio = "Calle Nueva 321",
                            Email = "pedro@alumno.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7785),
                            IsDeleted = false,
                            Nombre = "Pedro Alumno",
                            Observacion = "",
                            Password = "pedro",
                            Telefono = "777888999",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 6,
                            Dni = "33445566",
                            Domicilio = "Av. Central 321",
                            Email = "sofia@test.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7788),
                            IsDeleted = false,
                            Nombre = "Sofía Test",
                            Observacion = "",
                            Password = "sofia",
                            Telefono = "666555444",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 7,
                            Dni = "44556677",
                            Domicilio = "Calle Demo 111",
                            Email = "juan@demo.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7791),
                            IsDeleted = false,
                            Nombre = "Juan Demo",
                            Observacion = "",
                            Password = "juan",
                            Telefono = "555444333",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 8,
                            Dni = "55667799",
                            Domicilio = "Av. Estudio 222",
                            Email = "paula@alumna.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7794),
                            IsDeleted = false,
                            Nombre = "Paula Alumna",
                            Observacion = "",
                            Password = "paula",
                            Telefono = "444333222",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 9,
                            Dni = "66778899",
                            Domicilio = "Calle 123",
                            Email = "diego@ejemplo.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7796),
                            IsDeleted = false,
                            Nombre = "Diego Ejemplo",
                            Observacion = "",
                            Password = "diego",
                            Telefono = "333222111",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 10,
                            Dni = "77889900",
                            Domicilio = "Av. Universidad 900",
                            Email = "laura@prueba.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 31, 17, 820, DateTimeKind.Local).AddTicks(7799),
                            IsDeleted = false,
                            Nombre = "Laura Prueba",
                            Observacion = "",
                            Password = "laura",
                            Telefono = "222111000",
                            TipoRol = 0
                        });
                });

            modelBuilder.Entity("Service.Models.UsuarioCarrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioCarreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarreraId = 6,
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarreraId = 2,
                            IsDeleted = false,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            CarreraId = 3,
                            IsDeleted = false,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            CarreraId = 4,
                            IsDeleted = false,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarreraId = 5,
                            IsDeleted = false,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 6,
                            CarreraId = 1,
                            IsDeleted = false,
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 7,
                            CarreraId = 7,
                            IsDeleted = false,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 8,
                            CarreraId = 8,
                            IsDeleted = false,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 9,
                            CarreraId = 9,
                            IsDeleted = false,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 10,
                            CarreraId = 10,
                            IsDeleted = false,
                            UsuarioId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Ejemplar", b =>
                {
                    b.HasOne("Service.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Service.Models.Libro", b =>
                {
                    b.HasOne("Service.Models.Editorial", "Editorial")
                        .WithMany()
                        .HasForeignKey("EditorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editorial");
                });

            modelBuilder.Entity("Service.Models.LibroAutor", b =>
                {
                    b.HasOne("Service.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Service.Models.LibroGenero", b =>
                {
                    b.HasOne("Service.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Service.Models.Prestamo", b =>
                {
                    b.HasOne("Service.Models.Ejemplar", "Ejemplar")
                        .WithMany()
                        .HasForeignKey("EjemplarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ejemplar");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Service.Models.UsuarioCarrera", b =>
                {
                    b.HasOne("Service.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
